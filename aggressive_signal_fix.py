#!/usr/bin/env python3
"""
Agresif sinyal √ºretimi i√ßin d√ºzeltmeler
"""

print("=== AGRESƒ∞F Sƒ∞NYAL √úRETƒ∞Mƒ∞ ƒ∞√áƒ∞N D√úZELTMELER ===\n")

print("üîç PROBLEM ANALƒ∞Zƒ∞:")
print("- BEARISH trend'de RSI 20-28 arasƒ± ama hala HOLD")
print("- Confidence %56 civarƒ± ama e≈üik %30 olmasƒ±na raƒümen sinyal yok")
print("- signal_combiner.py'de filtreler √ßok sƒ±kƒ± olabilir")

print("\nüí° √á√ñZ√úM √ñNERƒ∞LERƒ∞:\n")

print("1. gram_altin_analyzer.py - Daha agresif sinyal √ºretimi:")
with open('gram_altin_analyzer_fix.txt', 'w') as f:
    f.write("""
# analyzers/gram_altin_analyzer.py - Line 287 civarƒ±
# Daha agresif sinyal √ºretimi
if buy_signals > sell_signals and buy_signals >= total_weight * 0.15:  # %20'den %15'e
    signal = "BUY"
    # RSI < 35 ise confidence boost
    if rsi_value and rsi_value < 35:
        base_confidence = min(base_confidence * 1.3, 1.0)
    confidence = base_confidence
    
elif sell_signals > buy_signals and sell_signals >= total_weight * 0.25:  # %30'dan %25'e
    signal = "SELL"
    # RSI > 65 ise confidence boost
    if rsi_value and rsi_value > 65:
        base_confidence = min(base_confidence * 1.3, 1.0)
    confidence = base_confidence
    
# E≈üit sinyal durumunda trend y√∂n√ºnde karar ver
elif buy_signals == sell_signals and buy_signals > 0:
    if trend == TrendType.BULLISH and rsi_value and rsi_value < 50:
        signal = "BUY"
        confidence = base_confidence * 0.8
    elif trend == TrendType.BEARISH and rsi_value and rsi_value > 50:
        signal = "SELL"
        confidence = base_confidence * 0.8
    else:
        signal = "HOLD"
""")

print("2. signal_combiner.py - Filter kontrol√ºn√º gev≈üet:")
with open('signal_combiner_fix.txt', 'w') as f:
    f.write("""
# strategies/hybrid/signal_combiner.py - _apply_filters metodu
def _apply_filters(self, signal: str, confidence: float, 
                  volatility: float, timeframe: str,
                  global_dir: str, risk_level: str,
                  dip_score: float = 0) -> Tuple[str, str]:
    
    # Volatilite filtresini sadece extreme d√º≈ü√ºk durumda uygula
    if volatility < MIN_VOLATILITY_THRESHOLD * 0.5 and signal != "HOLD":  # 0.15 altƒ±nda
        logger.debug(f"üîÑ FILTER: Extreme low volatility, converting to HOLD")
        return "HOLD", "WEAK"
    
    # Timeframe g√ºven e≈üiƒüi - Dip detection varsa gev≈üet
    if signal != "HOLD":
        min_confidence = MIN_CONFIDENCE_THRESHOLDS.get(timeframe, 0.5)
        
        # Dip detection veya extreme RSI durumunda e≈üiƒüi d√º≈ü√ºr
        if dip_score > 0.2 or (global_dir == "BEARISH" and signal == "BUY"):
            min_confidence *= 0.8  # %20 azalt
            
        if confidence < min_confidence:
            # Eƒüer √ßok yakƒ±nsa (5% fark) ve g√º√ßl√º sinyaller varsa ge√ßir
            if confidence >= min_confidence * 0.95:
                logger.debug(f"üîç FILTER: Near threshold, allowing signal")
            else:
                logger.debug(f"üîÑ FILTER: Low confidence, converting to HOLD")
                return "HOLD", "WEAK"
""")

print("\n3. Dip detection RSI kontrol√º:")
with open('dip_detection_fix.txt', 'w') as f:
    f.write("""
# signal_combiner.py - _analyze_dip_opportunity i√ßinde
# RSI Oversold kontrol√º - daha geni≈ü aralƒ±k
rsi_value = advanced_indicators.get('rsi')
if not rsi_value and hasattr(self, '_gram_indicators'):
    # Gram analizinden RSI'ƒ± al
    rsi_value = self._gram_indicators.get('rsi')
    
if rsi_value:
    if rsi_value < 25:  # Extreme oversold
        dip_score += self.dip_detection_weights['oversold_rsi'] * 1.0
        dip_signals.append(f"EXTREME oversold RSI {rsi_value:.1f}")
    elif rsi_value < 35:  # Normal oversold
        dip_score += self.dip_detection_weights['oversold_rsi'] * 0.7
        dip_signals.append(f"Oversold RSI {rsi_value:.1f}")
    elif rsi_value < 40:  # Near oversold
        dip_score += self.dip_detection_weights['oversold_rsi'] * 0.4
        dip_signals.append(f"Near oversold RSI {rsi_value:.1f}")
""")

print("\nüìã UYGULAMA ADIMLARI:")
print("1. gram_altin_analyzer.py'de sinyal e≈üiklerini %15/%25'e d√º≈ü√ºr")
print("2. E≈üit sinyal durumunda trend y√∂n√ºnde karar verme ekle")
print("3. signal_combiner.py'de filtreleri gev≈üet")
print("4. Dip detection'da RSI aralƒ±ƒüƒ±nƒ± geni≈ület")
print("5. Near-threshold durumlarƒ± i√ßin tolerans ekle")

print("\n‚ö° HIZLI TEST:")
print("Deploy sonrasƒ± ≈üu komutu √ßalƒ±≈ütƒ±rƒ±n:")
print("python3 test_dip_detection.py")
print("\nBEARISH + RSI<30 durumunda BUY sinyali g√∂rmelisiniz!")

# Dosyalar olu≈üturuldu
print("\n‚úÖ Fix dosyalarƒ± olu≈üturuldu:")
print("- gram_altin_analyzer_fix.txt")
print("- signal_combiner_fix.txt") 
print("- dip_detection_fix.txt")