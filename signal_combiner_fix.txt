
# strategies/hybrid/signal_combiner.py - _apply_filters metodu
def _apply_filters(self, signal: str, confidence: float, 
                  volatility: float, timeframe: str,
                  global_dir: str, risk_level: str,
                  dip_score: float = 0) -> Tuple[str, str]:
    
    # Volatilite filtresini sadece extreme d√º≈ü√ºk durumda uygula
    if volatility < MIN_VOLATILITY_THRESHOLD * 0.5 and signal != "HOLD":  # 0.15 altƒ±nda
        logger.debug(f"üîÑ FILTER: Extreme low volatility, converting to HOLD")
        return "HOLD", "WEAK"
    
    # Timeframe g√ºven e≈üiƒüi - Dip detection varsa gev≈üet
    if signal != "HOLD":
        min_confidence = MIN_CONFIDENCE_THRESHOLDS.get(timeframe, 0.5)
        
        # Dip detection veya extreme RSI durumunda e≈üiƒüi d√º≈ü√ºr
        if dip_score > 0.2 or (global_dir == "BEARISH" and signal == "BUY"):
            min_confidence *= 0.8  # %20 azalt
            
        if confidence < min_confidence:
            # Eƒüer √ßok yakƒ±nsa (5% fark) ve g√º√ßl√º sinyaller varsa ge√ßir
            if confidence >= min_confidence * 0.95:
                logger.debug(f"üîç FILTER: Near threshold, allowing signal")
            else:
                logger.debug(f"üîÑ FILTER: Low confidence, converting to HOLD")
                return "HOLD", "WEAK"
